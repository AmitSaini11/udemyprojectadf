{
	"name": "OrdersDataFlow",
	"properties": {
		"folder": {
			"name": "Stage1"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ResultDataSet",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ResultsSink",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          resultId as string,",
				"          raceId as string,",
				"          driverId as string,",
				"          constructorId as string,",
				"          number as string,",
				"          grid as string,",
				"          position as string,",
				"          positionText as string,",
				"          positionOrder as string,",
				"          points as string,",
				"          laps as string,",
				"          time as string,",
				"          milliseconds as string,",
				"          fastestLap as string,",
				"          rank as string,",
				"          fastestLapTime as string,",
				"          fastestLapSpeed as string,",
				"          statusId as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 select(mapColumn(",
				"          result_id = resultId,",
				"          race_id = raceId,",
				"          driver_id = driverId,",
				"          constructor_id = constructorId,",
				"          number,",
				"          grid,",
				"          position,",
				"          position_text = positionText,",
				"          position_order = positionOrder,",
				"          points,",
				"          laps,",
				"          time,",
				"          milliseconds,",
				"          fastest_lap = fastestLap,",
				"          rank,",
				"          fastest_lap_time = fastestLapTime,",
				"          fastest_lap_speed = fastestLapSpeed",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 derive(Ingestion_date = currentTimestamp(),",
				"          time = toTimestamp(time, 'HH:mm:ss'),",
				"     partitionBy('key',",
				"          0,",
				"          race_id",
				"     )) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}